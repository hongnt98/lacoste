<script>
  document.addEventListener("DOMContentLoaded", function() {
    (function($){
      if(window.customer_email) {
        //Variables
        var status_label = $('.statut').find('.stat-points')

        if($('body').hasClass('template-customers/account')){
          var boxes = $('.fidelity-box'),
              standard_box = boxes.eq(0)
          }

        if($('body').hasClass('template-pagel-reward')) {
          var assets = $('.content-asset').find('li.list-item')
          }

        $.ajax({
          url: "https://crm.omnirio.com/api/client/v1/customers/details",
          method: "POST",
          crossDomain: true,
          headers: {'api-token': 'xHVYuV8tO1RepDcSuH3uuA'},
          dataType: 'json',
          data: {
            "email": window.customer_email
          },
          success: function(data){
            console.log(data, 'data')
            var current_level = data.customer.current_loyalty_level,
                level = current_level.name,
                category = current_level.presentation,
                status = `${category} - Level ${level}`,
                points = data.customer.total_points,
                lDate = data.customer.loyalty_level_update_date,
                levels = data.customer.loyalty_levels;
            console.log(lDate, typeof lDate)
            //Acount page
            if($('body').hasClass('template-customers/account')){

              boxes.each(function(i, el){
                var $this = $(this),
                    elLevel = $this.data('level'),
                    valid = elLevel === parseInt(level),
                    bDate = $this.find('.required-date'),
                    rSpent = $this.find('.required-spent'),
                    bPoints = $this.find('.fidelity-box-points');
                if(valid) {
                  $this.addClass('fidelity-box-current').siblings().removeClass('fidelity-box-current')
                  status_label.text(status)
                  bDate.text(beforeDate(lDate))
                  bPoints.text(`${numberWithCommas(points)} ${points > 0 ? 'Points' : 'Point'}`);
                  levels.map(function(level) {
                    console.log(level, 'Level');
                    if (level.presentation === "Player") {
                      console.log('Player');
                      console.log(level.point_value_max, 'point_value_max');
                      console.log(points, 'point_value_max');
                      console.log(level.point_value_max - points,'');
                      $('.required-spent-1').text(numberWithCommas((level.point_value_max - points) + 1))
                    } else if (level.presentation === "Confirmed") {
                      console.log('Confirmed');
                      console.log(level.point_value_max, 'point_value_max');
                      console.log(points, 'point_value_max');
                      $('.required-spent-2').text(numberWithCommas((level.point_value_max - points) + 1))

                    } else if (level.presentation === "Advanced") {
                      console.log('Advanced');
                      console.log(level.point_value_max, 'point_value_max');
                      console.log(points, 'point_value_max');
                      $('.required-spent-3').text(numberWithCommas((level.point_value_max - points) + 1))
                    } 
                  })
                }
              });
            }
            //Rewards page 
            if($('body').hasClass('template-pagel-reward')) {
              status_label.text(status)
              assets.each(function(index, element) {
                var $this = $(this),
                    elLevel = $this.data('level'),
                    valid = elLevel === parseInt(level)
                console.log($this, ' ', elLevel, ' ', level, ' ', valid)
                if(valid) {
                  $this.removeClass('list-item-inactive');
                } else {
                  $this.addClass('list-item-inactive');
                }
              })
            }
          },
          error: function(error){
            //           console.log(error.status, error.statusText, error)
            if($('body').hasClass('template-customers/account')){
              standard_box.addClass('fidelity-box-current')
              standard_box.find('.required-date').text(beforeDate('2020-02-01'))
            }
            if($('body').hasClass('template-pagel-reward')) {
              $('.list-item[data-level="1"]').removeClass('list-item-inactive');
            }
          }
        });


      }

      function beforeDate(a) {
        var d = new Date(a);
        var year = d.getFullYear();
        var monthNames = [
          "January", 
          "February", 
          "March", 
          "April", 
          "May", 
          "June", 
          "July", 
          "August", 
          "September", 
          "October", 
          "November", 
          "December"
        ];
        var day = d.getDate();
        return `${monthNames[d.getMonth()]} ${day}, ${year +1}`;
      }

      function numberWithCommas(x) {
        return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
      }

    })(jQuery);
  })
</script>